{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/compose/config": {
            "get": {
                "description": "Retrieves configuration for a given project.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "Get configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project name",
                        "name": "project",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Configuration retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/config.GetResponse"
                        }
                    },
                    "404": {
                        "description": "Bad request with explanation",
                        "schema": {
                            "$ref": "#/definitions/config.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error with explanation",
                        "schema": {
                            "$ref": "#/definitions/config.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Sets configuration with provided parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "set"
                ],
                "summary": "Set configuration",
                "parameters": [
                    {
                        "description": "Set parameters",
                        "name": "set",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg.SetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Configuration set successfully",
                        "schema": {
                            "$ref": "#/definitions/config.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request with explanation",
                        "schema": {
                            "$ref": "#/definitions/config.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error with explanation",
                        "schema": {
                            "$ref": "#/definitions/config.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/compose/init": {
            "post": {
                "description": "Initializes configuration with provided parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "init"
                ],
                "summary": "Initialize configuration",
                "parameters": [
                    {
                        "description": "Initialization parameters",
                        "name": "arbitraries",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg.InitRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Initialization successful",
                        "schema": {
                            "$ref": "#/definitions/compose.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request with explanation",
                        "schema": {
                            "$ref": "#/definitions/compose.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/compose/pingcompose": {
            "get": {
                "description": "do ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "example"
                ],
                "summary": "ping example",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/compose/update": {
            "post": {
                "description": "Update configuration with provided parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "init"
                ],
                "summary": "Update configuration",
                "parameters": [
                    {
                        "description": "Update parameters",
                        "name": "arbitraries",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Initialization successful",
                        "schema": {
                            "$ref": "#/definitions/compose.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request with explanation",
                        "schema": {
                            "$ref": "#/definitions/compose.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "do ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "example"
                ],
                "summary": "ping example",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/upload": {
            "post": {
                "description": "Handles file uploads",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "example"
                ],
                "summary": "Upload file example",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Path to save file",
                        "name": "path",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project name",
                        "name": "project",
                        "in": "query"
                    },
                    {
                        "type": "file",
                        "description": "Upload file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Uploaded file",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "compose.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "compose.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "config.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "config.GetResponse": {
            "type": "object",
            "additionalProperties": true
        },
        "config.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "pkg.InitRequest": {
            "type": "object",
            "properties": {
                "default": {
                    "description": "Use default settings, default is false",
                    "type": "boolean"
                },
                "folder": {
                    "description": "Folder where to save configuration files, default is \"tmp\"",
                    "type": "string"
                },
                "from_file": {
                    "description": "Values keys and paths to files containing the content used as value",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "project": {
                    "description": "Project name, default is \"selks\"",
                    "type": "string"
                },
                "values": {
                    "description": "Values to set, key is the name of the value, value is the value",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "values_path": {
                    "description": "Path to a values.yaml file",
                    "type": "string"
                },
                "version": {
                    "description": "Target version, default is latest",
                    "type": "string"
                }
            }
        },
        "pkg.SetRequest": {
            "type": "object",
            "properties": {
                "apply": {
                    "description": "Apply the new configuration, relaunch it, default is false",
                    "type": "boolean"
                },
                "from_file": {
                    "description": "Values keys and paths to files containing the content used as value",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "project": {
                    "description": "Project name, default is \"tmp\"",
                    "type": "string"
                },
                "reload": {
                    "description": "Reload the configuration, don't keep arbitrary parameters",
                    "type": "boolean"
                },
                "values": {
                    "description": "Values to set, key is the name of the value, value is the value",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "values_path": {
                    "description": "Path to a values.yaml file",
                    "type": "string"
                }
            }
        },
        "pkg.UpdateRequest": {
            "type": "object",
            "properties": {
                "project": {
                    "description": "Project name, default is tmp",
                    "type": "string"
                },
                "values": {
                    "description": "Values to set, key is the name of the value, value is the value",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "version": {
                    "description": "Version to update to, default is latest",
                    "type": "string"
                }
            }
        }
    }
}