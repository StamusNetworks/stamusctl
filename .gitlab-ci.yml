stages:
    - build
    - test

sast:
    stage: test
include:
    - template: Security/SAST.gitlab-ci.yml

kaniko cli:
    stage: build
    before_script: []
    image:
        name: gcr.io/kaniko-project/executor:v1.14.0-debug
        entrypoint: ['']
    script:
        - |
            echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"},\"$(echo -n $CI_DEPENDENCY_PROXY_SERVER | awk -F[:] '{print $1}')\":{\"auth\":\"$(printf "%s:%s" ${CI_DEPENDENCY_PROXY_USER} "${CI_DEPENDENCY_PROXY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
            /kaniko/executor \
            --context "${CI_PROJECT_DIR}" \
            --dockerfile "${CI_PROJECT_DIR}/docker/Dockerfile.cli" \
            --destination "${CI_REGISTRY_IMAGE}/cli:${CI_COMMIT_BRANCH}-${CI_COMMIT_SHORT_SHA}" \
            --destination "${CI_REGISTRY_IMAGE}/cli:${CI_COMMIT_BRANCH}" \
            --cache=true \
            --cache-copy-layers=true \
            --cache-ttl=72h

kaniko cli main:
    stage: build
    before_script: []
    only:
        - main
    image:
        name: gcr.io/kaniko-project/executor:v1.14.0-debug
        entrypoint: ['']
    script:
        - |
            echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"},\"$(echo -n $CI_DEPENDENCY_PROXY_SERVER | awk -F[:] '{print $1}')\":{\"auth\":\"$(printf "%s:%s" ${CI_DEPENDENCY_PROXY_USER} "${CI_DEPENDENCY_PROXY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
            /kaniko/executor \
            --context "${CI_PROJECT_DIR}" \
            --dockerfile "${CI_PROJECT_DIR}/docker/Dockerfile.cli" \
            --destination "${CI_REGISTRY_IMAGE}/cli:${CI_COMMIT_SHORT_SHA}" \
            --destination "${CI_REGISTRY_IMAGE}/cli:latest" \
            --cache=true \
            --cache-copy-layers=true \
            --cache-ttl=72h

build cli:
    image: golang:alpine
    stage: build
    artifacts:
        expire_in: 1 day
        paths:
            - stamusctl
    script:
        - |
            apk add --no-cache gcc musl-dev make
            make cli
            mv dist/stamusctl .

build test:
    image: golang:alpine
    stage: build
    artifacts:
        expire_in: 1 day
        paths:
            - outputs
            - cli
    script:
        - |
            apk add --no-cache gcc musl-dev make
            chmod +x $(pwd)/scripts/move.sh
            $(pwd)/scripts/move.sh
            make test-cli
            mv .test/outputs outputs
            mv dist/stamusctl cli

test cli:
    image: busybox
    stage: test
    dependencies:
        - build cli
    script:
        - |
            ./stamusctl

unit tests:
    image: golang:alpine
    stage: test
    script:
        - |
            apk add --no-cache gcc musl-dev make
            make test

e2e compose init default:
    image: busybox
    stage: test
    dependencies:
        - build test
    script:
        - |
            ./cli init --default
            chmod +x $(pwd)/scripts/compare.sh
            $(pwd)/scripts/compare.sh ./tmp ./outputs/compose-init-default
            