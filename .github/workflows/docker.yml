name: Docker Build

on:
    workflow_call:

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    unit-tests:
        name: Unit Tests
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Go
              uses: actions/setup-go@v5
              with:
                  go-version-file: go.mod
                  cache: true

            - name: Run unit tests
              run: |
                  go test -coverprofile=profile.cov.tmp ./...
                  cat profile.cov.tmp | grep -v "_mocks.go" > cover.out
                  go tool cover -func cover.out

    docker-cli:
        name: Build CLI Docker Image
        runs-on: ubuntu-latest
        needs: [unit-tests]
        # Skip if this is a PR from main branch (like GitLab rule)
        if: github.event_name != 'pull_request' || github.head_ref != 'main'
        permissions:
            contents: read
            packages: write
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/cli
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=sha,prefix={{branch}}-

            - name: Build and push CLI image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: ./docker/Dockerfile.cli
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

    docker-daemon:
        name: Build Daemon Docker Image
        runs-on: ubuntu-latest
        needs: [unit-tests]
        # Skip if this is a PR from main branch (like GitLab rule)
        if: github.event_name != 'pull_request' || github.head_ref != 'main'
        permissions:
            contents: read
            packages: write
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/daemon
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=sha,prefix={{branch}}-

            - name: Build and push daemon image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: ./docker/Dockerfile.daemon
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
