name: Build and Release
on:
    push:
        branches:
            - main
            - trunk
    pull_request:
        branches:
            - main
            - trunk

jobs:
    get-version:
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.get_version.outputs.version }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  persist-credentials: false

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 'lts/*'
            - uses: pnpm/action-setup@v4
            - name: Install dependencies
              run: pnpm install

            - name: Version
              id: get_version
              env:
                  GITHUB_TOKEN: ${{ secrets.PUSH }}
              run: pnpm run release --no-ci --dry-run

            - name: Display
              run: echo "The next version is ${{ steps.get_version.outputs.version }}"

    build-stamusctl:
        needs: [get-version]

        runs-on: ${{ matrix.runner }}
        strategy:
            matrix:
                include:
                    - { runner: ubuntu-latest, os: linux, arch: amd64, go-version: 1.22 }
                    # - { runner: macos-latest, os: darwin, arch: amd64, go-version: 1.22 }
        steps:
            - uses: actions/checkout@v4
            - name: Setup Go ${{ matrix.go-version }}
              uses: actions/setup-go@v5
              with:
                  go-version: ${{ matrix.go-version }}
            - name: Build
              run: VERSION=${{ needs.get-version.outputs.version }} make cli && mv dist/stamusctl dist/stamusctl-${{matrix.os}}-${{matrix.arch}}
            - name: Upload
              uses: actions/upload-artifact@v4
              with:
                  name: stamusctl-${{matrix.os}}-${{matrix.arch}}
                  path: dist/*

    build-stamusdaemon:
        needs: [get-version]

        runs-on: ${{ matrix.runner }}
        strategy:
            matrix:
                include:
                    - { runner: ubuntu-latest, os: linux, arch: amd64, go-version: 1.22 }
                    # - { runner: macos-latest, os: darwin, arch: amd64, go-version: 1.22 }
        steps:
            - uses: actions/checkout@v4
            - name: Setup Go ${{ matrix.go-version }}
              uses: actions/setup-go@v5
              with:
                  go-version: ${{ matrix.go-version }}
            - name: Build
              run: VERSION=${{ needs.get-version.outputs.version }} make daemon && mv dist/stamusd dist/stamusd-${{matrix.os}}-${{matrix.arch}}
            - name: Upload
              uses: actions/upload-artifact@v4
              with:
                  name: stamusd-${{matrix.os}}-${{matrix.arch}}
                  path: dist/*
    release:
        name: Release
        needs: [build-stamusctl, build-stamusdaemon]

        runs-on: ${{ matrix.runner }}
        strategy:
            matrix:
                include:
                    - { runner: ubuntu-latest, os: linux, arch: amd64, go-version: 1.22 }

        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  persist-credentials: false

            - name: Download stamusctl
              uses: actions/download-artifact@v4
              with:
                  name: stamusctl-${{matrix.os}}-${{matrix.arch}}
            - name: Download stamusd
              uses: actions/download-artifact@v4
              with:
                  name: stamusd-${{matrix.os}}-${{matrix.arch}}

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 'lts/*'
            - uses: pnpm/action-setup@v4
            - name: Install dependencies
              run: pnpm install

            - name: Release
              env:
                  GITHUB_TOKEN: ${{ secrets.PUSH }}
                  RUNNER: ${{ matrix.runner }}
                  OS: ${{ matrix.os }}
                  ARCH: ${{ matrix.arch }}
              run: pnpm run release --no-ci
