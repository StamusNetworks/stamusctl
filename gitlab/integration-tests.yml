full test w test config:
    stage: integration
    image: docker:24.0.5
    tags:
        - k8s-small
    variables:
        DOCKER_HOST: tcp://docker:2376
        DOCKER_TLS_CERTDIR: '/certs'
        DOCKER_TLS_VERIFY: 1
        DOCKER_CERT_PATH: '$DOCKER_TLS_CERTDIR/client'
    services:
        - docker:24.0.5-dind
    needs:
        - build cli
    dependencies:
        - build cli
    before_script:
        - until docker info; do sleep 1; done
    script:
        - apk update && apk add jq
        - ./stamusctl login --registry $GITLAB_REGISTRY_PATH --user $GITLAB_REGISTRY_USER --pass $GITLAB_REGISTRY_TOKEN
        - ./stamusctl compose init tests --default
        - ./stamusctl compose up -d
        - docker inspect nginx | jq -e '.[0].HostConfig.RestartPolicy.Name == "unless-stopped"'
        - ./stamusctl compose down
        - ./stamusctl config set globals.restartmode=always
        - ./stamusctl compose up -d
        - docker inspect nginx | jq -e '.[0].HostConfig.RestartPolicy.Name == "always"'
    rules:
        - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
        - if: $CI_COMMIT_BRANCH == "main"

full test w debug image:
    stage: integration
    image: $CI_REGISTRY_IMAGE/cli:$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA
    tags:
        - k8s-small
    variables:
        DOCKER_HOST: tcp://docker:2376
        DOCKER_TLS_CERTDIR: '/certs'
        DOCKER_TLS_VERIFY: 1
        DOCKER_CERT_PATH: '$DOCKER_TLS_CERTDIR/client'
    services:
        - docker:24.0.5-dind
    needs:
        - docker cli
    script:
        - apk update && apk add jq docker
        - stamusctl login --registry $GITLAB_REGISTRY_PATH --user $GITLAB_REGISTRY_USER --pass $GITLAB_REGISTRY_TOKEN
        - stamusctl compose init tests --default
        - stamusctl compose up -d
        - docker inspect nginx | jq -e '.[0].HostConfig.RestartPolicy.Name == "unless-stopped"'
        - stamusctl compose down
        - stamusctl config set globals.restartmode=always
        - stamusctl compose up -d
        - docker inspect nginx | jq -e '.[0].HostConfig.RestartPolicy.Name == "always"'
    rules:
        - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
        - if: $CI_COMMIT_BRANCH == "main"

test upgrade:
    stage: integration
    image: $CI_REGISTRY_IMAGE/cli:$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA
    tags:
        - k8s-small
    variables:
        DOCKER_HOST: tcp://docker:2376
        DOCKER_TLS_CERTDIR: '/certs'
        DOCKER_TLS_VERIFY: 1
        DOCKER_CERT_PATH: '$DOCKER_TLS_CERTDIR/client'
    services:
        - docker:24.0.5-dind
    needs:
        - docker cli
    script:
        - apk update && apk add jq docker yq
        - stamusctl login --registry $GITLAB_REGISTRY_PATH --user $GITLAB_REGISTRY_USER --pass $GITLAB_REGISTRY_TOKEN
        - stamusctl compose init tests --version 0.9.7-gitlab
        - cat config/values.yaml | yq -e '.stamus.project == "tests"'
        - cat config/version | yq -e '. == "0.9.7"'
        - stamusctl compose init tests --version opensearch2
        - cat config/values.yaml | yq -e '.stamus.project == "tests"'
        - cat config/version | yq -e '. == "1.0.0"'
    rules:
        - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
        - if: $CI_COMMIT_BRANCH == "main"

test config get keys:
    stage: integration
    image: docker:24.0.5
    tags:
        - k8s-small
    variables:
        DOCKER_HOST: tcp://docker:2376
        DOCKER_TLS_CERTDIR: '/certs'
        DOCKER_TLS_VERIFY: 1
        DOCKER_CERT_PATH: '$DOCKER_TLS_CERTDIR/client'
    services:
        - docker:24.0.5-dind
    needs:
        - build cli
    dependencies:
        - build cli
    before_script:
        - until docker info; do sleep 1; done
    script:
        - apk update && apk add jq
        - ./stamusctl login --registry $GITLAB_REGISTRY_PATH --user $GITLAB_REGISTRY_USER --pass $GITLAB_REGISTRY_TOKEN
        - ./stamusctl compose init tests --default
        - ./stamusctl config get keys
        - ./stamusctl config get keys | grep 'websocket.response' || exit 1
    rules:
        - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
        - if: $CI_COMMIT_BRANCH == "main"

test clear instance:
    stage: integration
    image: docker:24.0.5
    tags:
        - k8s-small
    variables:
        DOCKER_HOST: tcp://docker:2376
        DOCKER_TLS_CERTDIR: '/certs'
        DOCKER_TLS_VERIFY: 1
        DOCKER_CERT_PATH: '$DOCKER_TLS_CERTDIR/client'
    services:
        - docker:24.0.5-dind
    needs:
        - build cli
    dependencies:
        - build cli
    before_script:
        - until docker info; do sleep 1; done
    script:
        - apk update && apk add jq
        - ./stamusctl login --registry $GITLAB_REGISTRY_PATH --user $GITLAB_REGISTRY_USER --pass $GITLAB_REGISTRY_TOKEN
        - ./stamusctl compose init tests --default
        - ./stamusctl compose up -d
        - ./stamusctl config clear
    rules:
        - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
        - if: $CI_COMMIT_BRANCH == "main"

test config get list:
    stage: integration
    image: docker:24.0.5
    tags:
        - k8s-small
    variables:
        DOCKER_HOST: tcp://docker:2376
        DOCKER_TLS_CERTDIR: '/certs'
        DOCKER_TLS_VERIFY: 1
        DOCKER_CERT_PATH: '$DOCKER_TLS_CERTDIR/client'
    services:
        - docker:24.0.5-dind
    needs:
        - build cli
    dependencies:
        - build cli
    before_script:
        - until docker info; do sleep 1; done
    script:
        - apk update && apk add jq
        - ./stamusctl login --registry $GITLAB_REGISTRY_PATH --user $GITLAB_REGISTRY_USER --pass $GITLAB_REGISTRY_TOKEN
        - ./stamusctl compose init tests --default
        - ./stamusctl config  list | grep 'down' || exit 1
        - ./stamusctl compose up -d
        - ./stamusctl config  list | grep 'up' || exit 1
    rules:
        - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
        - if: $CI_COMMIT_BRANCH == "main"
