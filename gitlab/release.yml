refresh-app-of-apps:
    stage: deploy
    needs:
        - test daemon
    variables:
        APP: stamusd
        ACTION: update
        BRANCH: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
        SHA: $CI_COMMIT_SHORT_SHA
        PROJECT: $CI_PROJECT_NAME
        NAMESPACE: $CI_PROJECT_NAMESPACE
        SLUG: $CI_PROJECT_PATH_SLUG
    trigger:
        project: devel/devops/app-of-app
        strategy: depend
    rules:
        - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "main"
          when: never
        - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
    environment:
        name: review/$CI_COMMIT_REF_SLUG
        url: https://stamusd.$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME.$CI_PROJECT_PATH_SLUG.stamus-networks.net
        on_stop: delete-env-from-app-of-apps

delete-env-from-app-of-apps:
    stage: deploy
    variables:
        ACTION: delete
        APP: stamusd
        BRANCH: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
        SHA: $CI_COMMIT_SHORT_SHA
        PROJECT: $CI_PROJECT_NAME
        NAMESPACE: $CI_PROJECT_NAMESPACE
        SLUG: $CI_PROJECT_PATH_SLUG
    trigger:
        project: devel/devops/app-of-app
        strategy: depend
    needs:
        - refresh-app-of-apps
    rules:
        - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "main"
          when: never
        - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
    when: manual
    environment:
        name: review/$CI_COMMIT_REF_SLUG
        action: stop

release-to-github:
    stage: release
    image: bitnami/git
    rules:
        - if: $CI_COMMIT_BRANCH
    script:
        - git config --global user.email $GITLAB_USER_EMAIL
        - git config --global user.name $GITLAB_USER_NAME
        - git remote add github "https://$GITHUB_USERNAME:$GITHUB_PAT@github.com/StamusNetworks/stamusctl.git"
        - git push -u --no-thin -f github HEAD:refs/heads/$CI_COMMIT_BRANCH

release-to-github-from-mr:
    stage: release
    image: bitnami/git
    rules:
        - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    script:
        - git config --global user.email $GITLAB_USER_EMAIL
        - git config --global user.name $GITLAB_USER_NAME
        - git remote add github "https://$GITHUB_USERNAME:$GITHUB_PAT@github.com/StamusNetworks/stamusctl.git"
        - git push -u --no-thin -f github HEAD:refs/heads/$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME

upload stamusctl:
    stage: release
    image: curlimages/curl:latest
    dependencies:
        - build cli
    rules:
        - if: $CI_COMMIT_TAG
    script:
        - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file stamusctl "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/stamusctl/$CI_COMMIT_TAG/stamusctl"'
    needs:
        - build cli

upload stamusd:
    stage: release
    image: curlimages/curl:latest
    dependencies:
        - build daemon
    rules:
        - if: $CI_COMMIT_TAG
    script:
        - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file stamusd "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/stamusctl/$CI_COMMIT_TAG/stamusd"'
    needs:
        - build daemon

create release with semantic-release:
    stage: deploy
    image: node:22
    before_script:
        - corepack enable
        - corepack prepare pnpm@latest --activate
        - pnpm config set store-dir .pnpm-store
    cache:
        key:
            files:
                - pnpm-lock.yaml
        paths:
            - .pnpm-store
    variables:
        GITLAB_TOKEN: $ACCESS_TOKEN
    script:
        - git config user.email $GITLAB_USER_EMAIL
        - git config user.name $GITLAB_USER_NAME
        - pnpm i
        - export NEXT_VERSION=$(pnpm run release --no-ci --dry-run | grep -oP 'The next release version is \K[0-9]+\.[0-9]+\.[0-9]+[-A-Za-z0-9.]+')
        - pnpm run release --no-ci
    rules:
        - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
        - if: $CI_COMMIT_BRANCH == "main"
